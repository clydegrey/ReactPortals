const path = require('path');

//enter project folder name
const PROJECT_NAME = './';

//set node env to start (process.env.node works with the cross-env npm package seen in package.json)
process.env.NODE_ENV = process.env.NODE_ENV || 'development';

const config = {
  //set node env to start
  // nodeEnv: process.env.NODE_ENV || 'development',
  //configure paths
  paths: {
   
    projBuild : `${PROJECT_NAME}/build/`,
    base: path.resolve(__dirname, `${PROJECT_NAME}`),
    src: path.resolve(__dirname, `${PROJECT_NAME}/src`),
    build: path.resolve(__dirname, `${PROJECT_NAME}/build`),
    assets: path.resolve(__dirname, `${PROJECT_NAME}/src/assets/`),
    js: path.resolve(__dirname, `${PROJECT_NAME}/src/js/app.js`),
    scss: path.resolve(__dirname, `${PROJECT_NAME}/src/scss/style.scss`),
    deferredScss: path.resolve(__dirname, `${PROJECT_NAME}/src/scss/deferred-style.scss`),
    offlinePage: path.resolve(__dirname, `${PROJECT_NAME}/src/offline.html`),
    tools: {
      build: path.resolve(__dirname, `${PROJECT_NAME}/static/build`),
      js: path.resolve(__dirname, `${PROJECT_NAME}/src/js/tools.js`),
      scss: path.resolve(__dirname, `${PROJECT_NAME}/src/scss/tools.scss`)
    }
  }
}

//check whether production; set to prod if true
const isProd = process.env.NODE_ENV === 'production' ? true : false;

module.exports = config;